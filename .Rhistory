strata(Year.Founded),
data=newhaz4, cluster=ID)
summary(myCph4f)
temp2 <- cox.zph(myCph4f)
print(temp2)                  # display the results
#######################################################################
#                                                                     #
# Model 5: Start-ups that did not receive any corporate investments   #
#                                                                     #
#######################################################################
newhaz5 <- newhaz1 %>%
dplyr::filter(!(ID %in% mod4$ID))
#################################################
# Exits - Cox proportional hazards regression   #
#################################################
myCph5s <- coxph(Surv(tstart,tstop,success) ~ Oth_inv + Pub_gr +
patent_time + Location + strata(Sector) +
strata(Year.Founded),
data=newhaz5, cluster=ID)
summary(myCph5s)
temp <- cox.zph(myCph5s)
print(temp)                  # display the results
#################################################
# Failure - Cox proportional hazards regression #
#################################################
myCph5f <- coxph(Surv(tstart,tstop,failure) ~ Oth_inv + Pub_gr +
patent_time + Location + strata(Sector) +
strata(Year.Founded),
data=newhaz5, cluster=ID)
summary(myCph5f)
temp2 <- cox.zph(myCph5f)
print(temp2)                  # display the results
# Cumulative hazard plots faceted by investors
myFit <- survfit(Surv(tstart,tstop,success) ~ CVC,
data=newhaz1, cluster=ID)
myFitpub <- survfit(Surv(tstart,tstop,success) ~ Pub_gr,
data=newhaz1, cluster=ID)
ggsurvplot_facet(myFit, data = newhaz1, fun = "cumhaz", conf.int = TRUE,
facet.by = c("Oth_inv",'Pub_gr'), ylim = c(0,1),
font.x = c(7), font.y = c(7), font.tickslab = c(6),
panel.labs.font = list(size = 7),
censor = FALSE, break.y.by = 0.5,
palette = c('#b2182b','#2166ac'),
#  title = 'Corporate Investment Impact on Success',
legend.labs = c('No Corporate Investment','Corporate Investment'),
legend.title = "", legend = c("bottom"),
panel.labs = list(Oth_inv = c('No Other Investment', 'Other Investment'),
Pub_gr = c('No Public Grant','Public Grant')),
short.panel.labs = TRUE,
xlab = 'Time since founding (yrs)',
ggtheme = theme_minimal()) +
theme(legend.key.size = unit(3, units = "mm"),
legend.margin=margin(t=-2, r=0, b=0, l=0, unit="mm"),
plot.margin = unit(x = c(0,-2, 0, 0), units = "mm"))
ggsave(paste0(getwd(), "/figs/model1_s_cvc.png"),
width = 78, height = 74, units = 'mm', dpi = 200)
ggsurvplot_facet(myFitpub, data = newhaz1, fun = "cumhaz", conf.int = TRUE,
facet.by = c("Oth_inv",'CVC'), ylim = c(0,1),
font.x = c(7), font.y = c(7), font.tickslab = c(6),
panel.labs.font = list(size = 7),
palette = c('#b2182b','#2166ac'),
censor = FALSE, break.y.by = 0.5,
legend.labs = c('No Public Grant','Public Grant'),
legend.title = "", legend = c("bottom"),
panel.labs = list(Oth_inv = c('No Other Investment', 'Other Investment'),
CVC = c('No Corporate Investment','Corporate Investment')),
short.panel.labs = TRUE,
xlab = 'Time since founding (yrs)',
ggtheme = theme_minimal()) +
theme(legend.key.size = unit(3, units = "mm"),
legend.margin=margin(t=-2, r=0, b=0, l=0, unit="mm"),
plot.margin = unit(x = c(0,-2, 0, 0), units = "mm"))
ggsave(paste0(getwd(), "/figs/model1_s_pub.png"),
width = 78, height = 74, units = 'mm', dpi = 200)
# Cumulative hazard plots faceted by year founded
ggsurvplot_facet(myFit, data = newhaz1, fun = "cumhaz", conf.int = TRUE, facet.by = "Year.Founded",
title = 'Corporate Investment Impact on Exits', font.title = c(11),
font.x = c(7), font.y = c(7), font.tickslab = c(7),
censor = FALSE,
legend.title = '', legend = 'bottom',
palette = c('#b2182b','#2166ac'),
legend.labs = c('No Corporate Investment','Corporate Investment'),
short.panel.labs = TRUE, panel.labs.font = list(size = 7),
xlab = 'Time since founding (yrs)',
ggtheme = theme_minimal())
ggsave(paste0(getwd(), "/figs/model1_s_yrfound.png"), width = 6.5, height = 5)
ggsurvplot_facet(myFitpub, data = newhaz1, fun = "cumhaz", conf.int = TRUE, facet.by = "Year.Founded",
title = 'Public Grant Impact on Exits', font.title = c(11),
font.x = c(7), font.y = c(7), font.tickslab = c(7),
censor = FALSE,
legend.title = '', legend = 'bottom',
palette = c('#b2182b','#2166ac'),
legend.labs = c('No Public Grant','Public Grant'),
short.panel.labs = TRUE, panel.labs.font = list(size = 7),
xlab = 'Time since founding (yrs)',
ggtheme = theme_minimal())
ggsave(paste0(getwd(), "/figs/model1_s_yrfound_pub.png"), width = 6.5, height = 5)
# Cumulative hazard plots faceted by investors
myFit <- survfit(Surv(tstart,tstop,failure) ~ CVC,
data=newhaz1, cluster=ID)
myFitpub <- survfit(Surv(tstart,tstop,failure) ~ Pub_gr,
data=newhaz1, cluster=ID)
ggsurvplot_facet(myFit, data = newhaz1, fun = "cumhaz", conf.int = TRUE,
facet.by = c("Oth_inv",'Pub_gr'), ylim = c(0,1.25),
font.x = c(7), font.y = c(7), font.tickslab = c(6),
panel.labs.font = list(size = 7),
palette = c('#b2182b','#2166ac'),
censor = FALSE, break.y.by = 0.5,
#   title = 'Corporate Investment Impact on Failure',
legend.labs = c('No CVC Investment','CVC Investment'),
legend.title = "", legend = c("bottom"),
panel.labs = list(Oth_inv = c('No Other Investment', 'Other Investment'),
Pub_gr = c('No Public Grant','Public Grant')),
short.panel.labs = TRUE,
xlab = 'Time since founding (yrs)',
ggtheme = theme_minimal()) +
theme(legend.key.size = unit(3, units = "mm"),
legend.margin=margin(t=-2, r=0, b=0, l=0, unit="mm"),
plot.margin = unit(x = c(0,-2, 0, 0), units = "mm"))
ggsave(paste0(getwd(), "/figs/model1_f_cvc.png"),
width = 78, height = 74, units = 'mm', dpi = 200)
ggsurvplot_facet(myFitpub, data = newhaz1, fun = "cumhaz", conf.int = TRUE,
facet.by = c("Oth_inv",'CVC'), ylim = c(0,1.25),
font.x = c(7), font.y = c(7), font.tickslab = c(6),
panel.labs.font = list(size = 7),
censor = FALSE, break.y.by = 0.5,
palette = c('#b2182b','#2166ac'),
#  title = 'Public Grant Impact on Failure',
legend.labs = c('No Public Grant','Public Grant'),
legend.title = "", legend = c("bottom"),
panel.labs = list(Oth_inv = c('No Other Investment', 'Other Investment'),
CVC = c('No Corporate Investment','Corporate Investment')),
short.panel.labs = TRUE,
xlab = 'Time since founding (yrs)',
ggtheme = theme_minimal()) +
theme(legend.key.size = unit(3, units = "mm"),
legend.margin=margin(t=-2, r=0, b=0, l=0, unit="mm"),
plot.margin = unit(x = c(0,-2, 0, 0), units = "mm"))
ggsave(paste0(getwd(), "/figs/model1_f_pub.png"),
width = 78, height = 74, units = 'mm', dpi = 200)
# Cumulative hazard plots faceted by year founded
ggsurvplot_facet(myFit, data = newhaz1, fun = "cumhaz", conf.int = TRUE, facet.by = "Year.Founded",
title = 'Corporate Investment Impact on Failure', font.title = c(11),
font.x = c(7), font.y = c(7), font.tickslab = c(7),
censor = FALSE,
legend.title = '', legend = 'bottom',
palette = c('#b2182b','#2166ac'),
legend.labs = c('No Corporate Investment','Corporate Investment'),
short.panel.labs = TRUE, panel.labs.font = list(size = 7),
xlab = 'Time since founding (yrs)',
ggtheme = theme_minimal())
ggsave(paste0(getwd(), "/figs/model1_f_yrfound.png"), width = 6.5, height = 5)
ggsurvplot_facet(myFitpub, data = newhaz1, fun = "cumhaz", conf.int = TRUE, facet.by = "Year.Founded",
title = 'Public Grant Impact on Failure', font.title = c(11),
font.x = c(7), font.y = c(7), font.tickslab = c(7),
censor = FALSE,
legend.title = '', legend = 'bottom',
palette = c('#b2182b','#2166ac'),
legend.labs = c('No Public Grant','Public Grant'),
short.panel.labs = TRUE, panel.labs.font = list(size = 7),
xlab = 'Time since founding (yrs)',
ggtheme = theme_minimal())
ggsave(paste0(getwd(), "/figs/model1_f_yrfound_pub.png"), width = 6.5, height = 5)
# Code to perform Cox Proportional Hazards Regression and generate figures
# Kathleen Kennedy 2022
########################################################################
library(tidyverse)
library(survival)
library(survminer)
library(coxme)
library(gtsummary)
library(flextable)
library(broom)
library(stringr)
###################################################
#                                                 #
# Create dataframe for hazards analysis           #
#                                                 #
###################################################
# Read in data from i3_data_cleaning.ipynb and get in format for analysis
haz_df1 <- read.csv(paste0(dirname(getwd()),'/outputs/hazard_data_recurrent.csv')) %>%
dplyr::mutate(log_patent = log1p(patent_count)) %>%
dplyr::mutate(end_period = 2021 - Year.Founded) %>%
rename(total_capital = Total.paid.in.Capital....)
id_list <- haz_df1 %>% select(ID,company,Year.Founded) %>% unique()
patent_df <- read.csv(paste0(dirname(dirname(getwd())),'/patents/output/patent_counts_2.csv')) %>%
dplyr::right_join(id_list) %>%
mutate(t_pat = year - Year.Founded) %>%
filter(t_pat >= 0) %>%
mutate(pat_log = log1p(pat_count))
end_times <- haz_df1 %>%
select(ID,end_period) %>%
unique()
base <- haz_df1 %>%
select(ID, Company, Sector, Status, Year.Founded, age, total_capital, patent_count, log_patent, Location) %>%
unique()
invs <- haz_df1 %>%
select(ID,t_inv)
CVC_inv <- haz_df1 %>%
select(ID,t_inv, CVC_bin) %>%
filter(CVC_bin == 1) %>%
unique()
Oth_inv <- haz_df1 %>%
select(ID,t_inv, Other_inv_bin) %>%
filter(Other_inv_bin == 1) %>%
unique()
Pub_gr <- haz_df1 %>%
select(ID,t_inv, Pub_grant_bin) %>%
filter(Pub_grant_bin == 1) %>%
unique()
success <- haz_df1 %>%
select(ID, time_to_success) %>%
drop_na() %>% unique()
failure <- haz_df1 %>%
select(ID,time_to_failure) %>%
drop_na() %>% unique()
ipo <- haz_df1 %>%
select(ID,time_to_ipo) %>%
drop_na() %>% unique()
ma <- haz_df1 %>%
select(ID,time_to_ma) %>%
drop_na() %>% unique()
outcome <- haz_df1 %>%
select(ID,time_to_outcome) %>%
drop_na() %>% unique()
newhaz1 <- tmerge(data1=base,data2=end_times,id=ID,tstop=end_period)
newhaz1 <- tmerge(newhaz1,patent_df,id=ID, patent_time=tdc(t_pat,pat_count))
newhaz1 <- tmerge(newhaz1,CVC_inv,id=ID, CVC=tdc(t_inv,CVC_bin))
newhaz1 <- tmerge(newhaz1,Oth_inv,id=ID, Oth_inv=tdc(t_inv,Other_inv_bin))
newhaz1 <- tmerge(newhaz1,Pub_gr,id=ID, Pub_gr=tdc(t_inv,Pub_grant_bin))
newhaz1 <- tmerge(newhaz1,patent_df,id=ID, patent_time_cum=cumtdc(t_pat,pat_count))
newhaz1 <- tmerge(newhaz1,CVC_inv,id=ID, CVC_cum=cumtdc(t_inv,CVC_bin))
newhaz1 <- tmerge(newhaz1,Oth_inv,id=ID, Oth_inv_cum=cumtdc(t_inv,Other_inv_bin))
newhaz1 <- tmerge(newhaz1,Pub_gr,id=ID, Pub_gr_cum=cumtdc(t_inv,Pub_grant_bin))
newhaz1 <- tmerge(newhaz1,success,id=ID, success=event(time_to_success))
newhaz1 <- tmerge(newhaz1,failure,id=ID, failure=event(time_to_failure))
newhaz1 <- tmerge(newhaz1,ipo,id=ID, ipo=event(time_to_ipo))
newhaz1 <- tmerge(newhaz1,ma,id=ID, ma=event(time_to_ma))
newhaz1 <- tmerge(newhaz1,outcome,id=ID, outcome=event(time_to_outcome))
newhaz1[is.na(newhaz1)] <- 0
newhaz1 <- newhaz1 %>%
mutate(Sector = ifelse(Sector == "", "uncategorized", Sector))
##############################################################
#                                                            #
# Model 2: Start-ups that received at least one public grant #
#                                                            #
##############################################################
mod2 <- haz_df1 %>%
dplyr::filter(Pub_grant_bin == 1) %>%
unique()
newhaz2 <- newhaz1 %>%
dplyr::filter(ID %in% mod2$ID)
#################################################
# Exits - Cox proportional hazards regression   #
#################################################
myCph2s <- coxph(Surv(tstart,tstop,success) ~ CVC + Oth_inv +
patent_time + Location + strata(Sector) +
strata(Year.Founded),
data=newhaz2, cluster=ID)
summary(myCph2s)
s2 <- ggsurvplot(myFit, data = newhaz2, fun = "cumhaz", conf.int = TRUE, facet.by = 'Oth_inv',
title = 'Model 2 (Public Grant): Success', ylim = c(0,.75), censor = TRUE,
# ncensor.plot = TRUE, ncensor.plot.height = 0.33,
# cumevents = TRUE,
# cumcensor = TRUE,
# risk.table = "abs_pct",
legend.labs = c('No CVC Investment','CVC Investment'),
legend.title = "", legend = c("none"),
panel.labs = list(Oth_inv = c('No Other Investment', 'Other Investment')),
short.panel.labs = TRUE,
ggtheme = theme_minimal())
myFit <- survfit(Surv(tstart,tstop,success) ~ CVC,
data=newhaz2, cluster=ID)
s2 <- ggsurvplot(myFit, data = newhaz2, fun = "cumhaz", conf.int = TRUE, #facet.by = 'Oth_inv',
title = 'Model 2 (Public Grant): Success', ylim = c(0,.75), censor = TRUE,
# ncensor.plot = TRUE, ncensor.plot.height = 0.33,
# cumevents = TRUE,
# cumcensor = TRUE,
# risk.table = "abs_pct",
legend.labs = c('No CVC Investment','CVC Investment'),
legend.title = "", legend = c("none"),
#  panel.labs = list(Oth_inv = c('No Other Investment', 'Other Investment')),
short.panel.labs = TRUE,
ggtheme = theme_minimal())
##############################################################
#                                                            #
# Model 3: Start-ups that did not receive any public grants  #
#                                                            #
##############################################################
newhaz3 <- newhaz1 %>%
dplyr::filter(!(ID %in% mod2$ID))
myFit <- survfit(Surv(tstart,tstop,success) ~ CVC,
data=newhaz3, cluster=ID)
s3 <- ggsurvplot(myFit, data = newhaz3, fun = "cumhaz", conf.int = TRUE, #facet.by = 'Oth_inv',
title = 'Model 3 (No Public Grant): Success', ylim = c(0,.75), censor = TRUE,
# ncensor.plot = TRUE, ncensor.plot.height = 0.33,
# cumevents = TRUE,
# cumcensor = TRUE,
# risk.table = "abs_pct",
legend.title = "", legend = c("bottom"),
legend.labs = c('No CVC Investment','CVC Investment'),
#  panel.labs = list(Oth_inv = c('No Other Investment', 'Other Investment')),
short.panel.labs = TRUE,
ggtheme = theme_minimal())
ggarrange(s2, s3, ncol = 1, nrow = 2, common.legend = TRUE, legend = c('bottom'))
myFit <- survfit(Surv(tstart,tstop,success) ~ CVC,
data=newhaz2, cluster=ID)
s2 <- ggsurvplot(myFit, data = newhaz2, fun = "cumhaz", conf.int = TRUE, #facet.by = 'Oth_inv',
title = 'Model 2 (Public Grant): Success', ylim = c(0,.75), censor = TRUE,
# ncensor.plot = TRUE, ncensor.plot.height = 0.33,
# cumevents = TRUE,
# cumcensor = TRUE,
# risk.table = "abs_pct",
legend.labs = c('No CVC Investment','CVC Investment'),
legend.title = "", legend = c("none"),
#  panel.labs = list(Oth_inv = c('No Other Investment', 'Other Investment')),
short.panel.labs = TRUE,
ggtheme = theme_minimal())
s2
s2 <- ggsurvplot(myFit, data = newhaz2, fun = "cumhaz", conf.int = TRUE, #facet.by = 'Oth_inv',
title = 'Exits: Start-ups with Public Grants', ylim = c(0,.75), censor = TRUE,
# ncensor.plot = TRUE, ncensor.plot.height = 0.33,
# cumevents = TRUE,
# cumcensor = TRUE,
# risk.table = "abs_pct",
legend.labs = c('No CVC Investment','CVC Investment'),
legend.title = "", legend = c("none"),
#  panel.labs = list(Oth_inv = c('No Other Investment', 'Other Investment')),
short.panel.labs = TRUE,
ggtheme = theme_minimal())
myFit <- survfit(Surv(tstart,tstop,success) ~ CVC,
data=newhaz3, cluster=ID)
s3 <- ggsurvplot(myFit, data = newhaz3, fun = "cumhaz", conf.int = TRUE, #facet.by = 'Oth_inv',
title = 'Exits: Start-ups without Public Grants', ylim = c(0,.75), censor = TRUE,
# ncensor.plot = TRUE, ncensor.plot.height = 0.33,
# cumevents = TRUE,
# cumcensor = TRUE,
# risk.table = "abs_pct",
legend.title = "", legend = c("bottom"),
legend.labs = c('No CVC Investment','CVC Investment'),
#  panel.labs = list(Oth_inv = c('No Other Investment', 'Other Investment')),
short.panel.labs = TRUE,
ggtheme = theme_minimal())
s3
ggarrange(s2, s3, ncol = 2, nrow = 1, common.legend = TRUE, legend = c('bottom'))
ggarrange(s2, s3, ncol = 2, nrow = 1, common.legend = TRUE)#, legend = c('bottom'))
ggarrange(s2, s3, ncol = 2, nrow = 1)#, common.legend = TRUE, legend = c('bottom'))
s2
s3
View(s2)
ggarrange(s2.plot,s3.plot)
View(s2)
s2[0]
s2[1]
ggarrange(s2$plot, s3$plot, ncol = 2, nrow = 1)#, common.legend = TRUE, legend = c('bottom'))
ggarrange(s2$plot, s3$plot, ncol = 2, nrow = 1, common.legend = TRUE, legend = c('bottom'))
ggsave(paste0(getwd(), "/figs/mod2_mod3_s.png"), width = 6, height = 5)
ggsave(paste0(getwd(), "/figs/mod2_mod3_s.png"), width = 7, height = 4)
ggsave(paste0(getwd(), "/figs/mod2_mod3_s.png"), width = 7, height = 3.5)
# Code to perform Cox Proportional Hazards Regression and generate figures
# Kathleen Kennedy 2022
########################################################################
library(tidyverse)
library(survival)
library(survminer)
library(coxme)
library(gtsummary)
library(flextable)
library(broom)
library(stringr)
###################################################
#                                                 #
# Create dataframe for hazards analysis           #
#                                                 #
###################################################
# Read in data from i3_data_cleaning.ipynb and get in format for analysis
haz_df1 <- read.csv(paste0(dirname(getwd()),'/outputs/hazard_data_recurrent.csv')) %>%
dplyr::mutate(log_patent = log1p(patent_count)) %>%
dplyr::mutate(end_period = 2021 - Year.Founded) %>%
rename(total_capital = Total.paid.in.Capital....)
id_list <- haz_df1 %>% select(ID,company,Year.Founded) %>% unique()
patent_df <- read.csv(paste0(dirname(dirname(getwd())),'/patents/output/patent_counts_2.csv')) %>%
dplyr::right_join(id_list) %>%
mutate(t_pat = year - Year.Founded) %>%
filter(t_pat >= 0) %>%
mutate(pat_log = log1p(pat_count))
end_times <- haz_df1 %>%
select(ID,end_period) %>%
unique()
base <- haz_df1 %>%
select(ID, Company, Sector, Status, Year.Founded, age, total_capital, patent_count, log_patent, Location) %>%
unique()
View(base)
# Code to perform Cox Proportional Hazards Regression and generate figures
# Kathleen Kennedy 2022
########################################################################
library(tidyverse)
library(survival)
library(survminer)
library(coxme)
library(gtsummary)
library(flextable)
library(broom)
library(stringr)
###################################################
#                                                 #
# Create dataframe for hazards analysis           #
#                                                 #
###################################################
# Read in data from i3_data_cleaning.ipynb and get in format for analysis
haz_df1 <- read.csv(paste0(dirname(getwd()),'/outputs/hazard_data_recurrent.csv')) %>%
dplyr::mutate(log_patent = log1p(patent_count)) %>%
dplyr::mutate(end_period = 2021 - Year.Founded) %>%
rename(total_capital = Total.paid.in.Capital....)
###################################################
#                                                 #
# Create dataframe for hazards analysis           #
#                                                 #
###################################################
# Read in data from i3_data_cleaning.ipynb and get in format for analysis
haz_df1 <- read.csv(paste0(getwd(),'/outputs/hazard_data_recurrent.csv')) %>%
dplyr::mutate(log_patent = log1p(patent_count)) %>%
dplyr::mutate(end_period = 2021 - Year.Founded) %>%
rename(total_capital = Total.paid.in.Capital....)
id_list <- haz_df1 %>% select(ID,company,Year.Founded) %>% unique()
patent_df <- read.csv(paste0(dirname(dirname(getwd())),'/patents/output/patent_counts_2.csv')) %>%
dplyr::right_join(id_list) %>%
mutate(t_pat = year - Year.Founded) %>%
filter(t_pat >= 0) %>%
mutate(pat_log = log1p(pat_count))
patent_df <- read.csv(paste0(getwd(),'/patents/output/patent_counts_2.csv')) %>%
dplyr::right_join(id_list) %>%
mutate(t_pat = year - Year.Founded) %>%
filter(t_pat >= 0) %>%
mutate(pat_log = log1p(pat_count))
end_times <- haz_df1 %>%
select(ID,end_period) %>%
unique()
base <- haz_df1 %>%
select(ID, Company, Sector, Status, Year.Founded, age, total_capital, patent_count, log_patent, Location) %>%
unique()
invs <- haz_df1 %>%
select(ID,t_inv)
CVC_inv <- haz_df1 %>%
select(ID,t_inv, CVC_bin) %>%
filter(CVC_bin == 1) %>%
unique()
Oth_inv <- haz_df1 %>%
select(ID,t_inv, Other_inv_bin) %>%
filter(Other_inv_bin == 1) %>%
unique()
Pub_gr <- haz_df1 %>%
select(ID,t_inv, Pub_grant_bin) %>%
filter(Pub_grant_bin == 1) %>%
unique()
success <- haz_df1 %>%
select(ID, time_to_success) %>%
drop_na() %>% unique()
failure <- haz_df1 %>%
select(ID,time_to_failure) %>%
drop_na() %>% unique()
ipo <- haz_df1 %>%
select(ID,time_to_ipo) %>%
drop_na() %>% unique()
ma <- haz_df1 %>%
select(ID,time_to_ma) %>%
drop_na() %>% unique()
outcome <- haz_df1 %>%
select(ID,time_to_outcome) %>%
drop_na() %>% unique()
newhaz1 <- tmerge(data1=base,data2=end_times,id=ID,tstop=end_period)
newhaz1 <- tmerge(newhaz1,patent_df,id=ID, patent_time=tdc(t_pat,pat_count))
newhaz1 <- tmerge(newhaz1,CVC_inv,id=ID, CVC=tdc(t_inv,CVC_bin))
newhaz1 <- tmerge(newhaz1,Oth_inv,id=ID, Oth_inv=tdc(t_inv,Other_inv_bin))
newhaz1 <- tmerge(newhaz1,Pub_gr,id=ID, Pub_gr=tdc(t_inv,Pub_grant_bin))
newhaz1 <- tmerge(newhaz1,patent_df,id=ID, patent_time_cum=cumtdc(t_pat,pat_count))
newhaz1 <- tmerge(newhaz1,CVC_inv,id=ID, CVC_cum=cumtdc(t_inv,CVC_bin))
newhaz1 <- tmerge(newhaz1,Oth_inv,id=ID, Oth_inv_cum=cumtdc(t_inv,Other_inv_bin))
newhaz1 <- tmerge(newhaz1,Pub_gr,id=ID, Pub_gr_cum=cumtdc(t_inv,Pub_grant_bin))
newhaz1 <- tmerge(newhaz1,success,id=ID, success=event(time_to_success))
newhaz1 <- tmerge(newhaz1,failure,id=ID, failure=event(time_to_failure))
newhaz1 <- tmerge(newhaz1,ipo,id=ID, ipo=event(time_to_ipo))
newhaz1 <- tmerge(newhaz1,ma,id=ID, ma=event(time_to_ma))
newhaz1 <- tmerge(newhaz1,outcome,id=ID, outcome=event(time_to_outcome))
newhaz1[is.na(newhaz1)] <- 0
newhaz1 <- newhaz1 %>%
mutate(Sector = ifelse(Sector == "", "uncategorized", Sector))
###################################################
#                                                 #
# Model 1: Full population model of all start-ups #
#                                                 #
###################################################
#################################################
# Exits - Cox proportional hazards regression   #
#################################################
myCph1s <- coxph(Surv(tstart,tstop,success) ~ CVC + Oth_inv +
Pub_gr + patent_time + Location + strata(Sector) +
strata(Year.Founded),
data=newhaz1, cluster=ID)
summary(myCph1s)
# Check assumptions:
# If no variables are significant,
# proportional hazards assumption is valid
temp <- cox.zph(myCph1s)
print(temp)
plot(temp, var=1)
ggcoxzph(temp, font.main = 9, font.submain = 9,font.y=9,font.x=9, font.tickslab=9)
# If dfbeta values are small compared to regression coefficient,
# there are no influential outliers
ggcoxdiagnostics(myCph1s, type = "dfbeta",
linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxfunctional(Surv(tstart,tstop,success) ~ patent_time + log1p(patent_time) + sqrt(patent_time), data = newhaz1) # check linearity...
